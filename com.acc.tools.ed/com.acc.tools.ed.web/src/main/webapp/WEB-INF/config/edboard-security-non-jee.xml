<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
 
    <!-- Configuring RoleVoter bean to use custom access roles, by default roles
        should be in the form ROLE_{XXX} -->
 <!--    <beans:bean id="roleVoter"
        class="org.springframework.security.access.vote.RoleVoter">
        <beans:property name="rolePrefix" value=""></beans:property>
    </beans:bean>
 
    <beans:bean id="accessDecisionManager"
        class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters"
            ref="roleVoter" />
    </beans:bean> -->
 
  <!--   <http authentication-manager-ref="jdbc-auth" -->
   <http auto-config="true" use-expressions="true"
       >
       <!--  access-decision-manager-ref="accessDecisionManager" -->
    <!--     <intercept-url pattern="/emp/**" access="ROLE_USER" /> -->
   <intercept-url pattern="/login.do" access="isAuthenticated()"  />
        <form-login login-page="/start.do" authentication-failure-url="/denied"
            username-parameter="username" password-parameter="password"
            default-target-url="/login.do" />
        <logout invalidate-session="true" logout-success-url="/start.do"
            logout-url="/j_spring_security_logout" />
        <access-denied-handler error-page="/denied"/>
        <session-management invalid-session-url="/start.do">
            <concurrency-control max-sessions="1"
                expired-url="/start.do" />
        </session-management>
       <!--  <intercept-url pattern="/**" access="ROLE_USER"/> -->
    </http>
 
   <!--  <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="edbUser" password="admin123"  authorities="" />
            </user-service>
        </authentication-provider>
    </authentication-manager> -->
    
    <!-- <authentication-manager id="jdbc-auth">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select EMP_ENTERPRISE_ID,PASSWORD from EDB_MSTR_EMP_DTLS where EMP_ENTERPRISE_ID = ? and PASSWORD =? "
               />
        </authentication-provider>
    </authentication-manager> -->
    <authentication-manager>
    <authentication-provider user-service-ref="userDetailsService"></authentication-provider>
    </authentication-manager>
    <beans:bean id='userDetailsService' class='com.acc.tools.ed.web.controller.login.UserDetailsServiceImpl'>
<!--   <property name='userdao' ref='userDao' />
 --> </beans:bean>
  <!--   <beans:bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
        <beans:property name="driverClassName" value="sun.jdbc.odbc.JdbcOdbcDriver" />
        <beans:property name="url"
            value="jdbc:odbc:Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=C://Vijayendra//New folder//EngagementDashboard.accdb" />
        
    </beans:bean> -->
<!--  
    <authentication-manager id="dao-auth">
        <authentication-provider user-service-ref="userDetailsService">
        </authentication-provider>
    </authentication-manager>
 
    <beans:bean id="userDetailsService"
        class="com.journaldev.spring.security.dao.AppUserDetailsServiceDAO" />
 
    <authentication-manager id="jdbc-auth">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="select EMP_ENTERPRISE_ID,PASSWORD from EDB_MSTR_EMP_DTLS where EMP_ENTERPRISE_ID = ? and PASSWORD =? "
               />
        </authentication-provider>
    </authentication-manager> -->
 
    <!-- MySQL DB DataSource -->
  <!--   <beans:bean id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
 
        <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <beans:property name="url"
            value="jdbc:mysql://localhost:3306/TestDB" />
        <beans:property name="username" value="pankaj" />
        <beans:property name="password" value="pankaj123" />
    </beans:bean>
 
    If DataSource is configured in Tomcat Servlet Container
    <beans:bean id="dbDataSource"
        class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/MyLocalDB" />
    </beans:bean> -->
</beans:beans>
